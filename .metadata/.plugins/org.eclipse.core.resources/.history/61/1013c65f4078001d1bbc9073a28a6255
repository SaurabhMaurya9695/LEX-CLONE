package com.lex.service.impl;

import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.lex.entity.User;
import com.lex.entity.UserRole;
import com.lex.repo.RoleRepository;
import com.lex.repo.UserRepository;
import com.lex.service.UserService;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	private UserRepository userRepository;

	@Autowired
	private RoleRepository roleRepository;

	@Override
	public User createUser(User user, Set<UserRole> userRoles) throws Exception {
		User local = this.userRepository.findByUsername(user.getUsername());
		if (local != null) // means user is already present;
		{
			System.out.println("User is already Present");
			throw new Exception("USER_ALREADY_PRESENT");
		} else {
			// create user Now and save the roles;
			for (UserRole ur : userRoles) {
				this.roleRepository.save(ur.getRole());
			}
			// user must have userRoles;
			user.getUserRoles().addAll(userRoles);
			local = this.userRepository.save(user);

		}

		return local;
	}

	// ````````````````````````GetuserByUserName()```````````````
	@Override
	public User getUser(String username) {

		return this.userRepository.findByUsername(username);
	}

	// ````````````````````````GetuserByUserName()```````````````
	@Override
	public void deleteUserByUserName(String username) {

	}

}
